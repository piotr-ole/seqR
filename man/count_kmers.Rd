% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_kmers.R
\name{count_kmers}
\alias{count_kmers}
\title{Count k-mers of one, specific type for a given collection of sequences}
\usage{
count_kmers(
  sequences,
  k = length(kmer_gaps) + 1,
  kmer_alphabet = getOption("seqR_kmer_alphabet_default"),
  positional = getOption("seqR_positional_default"),
  kmer_gaps = c(),
  with_kmer_counts = getOption("seqR_with_kmer_counts_default"),
  with_kmer_names = getOption("seqR_with_kmer_names_default"),
  batch_size = getOption("seqR_batch_size_default"),
  hash_dim = getOption("seqR_hash_dim_default"),
  verbose = getOption("seqR_verbose_default")
)
}
\arguments{
\item{sequences}{input sequences of one of two supported types,
either \code{string vector} or \code{list} of \code{string vectors}
(for more information see section \verb{Supported input sequences})}

\item{k}{an \code{integer} representing the length of a k-mer}

\item{kmer_alphabet}{a \code{string vector} representing the elements that should be used
during the construction of k-mers. By default, all elements that are present in sequences
are taking into account}

\item{positional}{a single \code{logical} value that determines whether positional k-mer
variant should be considered
(for more information on k-mer types see section \verb{Supported variants of k-mers})}

\item{kmer_gaps}{an \code{integer vector} representing the lengths of gaps between consecutive
k-mer elements. The length of the vector should be equal to \code{k - 1}}

\item{with_kmer_counts}{a single \code{logical} value that determines whether the result
should contain k-mer frequencies}

\item{with_kmer_names}{a single \code{logical} value that determines whether the result
should contain human-readable k-mer names}

\item{batch_size}{a single \code{integer} value representing the number of sequences
that are being processed in a single step
(for more information see section \verb{Configurable size of batch of sequences})}

\item{hash_dim}{a single \code{integer} value representing the length of hash vector
that is internally used in the algorithm
(for more information see section \verb{Configurable dimension of the hash value of a k-mer})}

\item{verbose}{a single \code{logical} value representing whether a user wants to get
extra information on the current state of computations}
}
\value{
a \code{\link[Matrix]{Matrix}} value that represents a result k-mer space.
The result is a sparse matrix in order to reduce memory consumption.
The i-th row of the matrix represents k-mers found in the i-th input sequence.
Each column represents a distinct k-mer.
The names of columns conform to human-readable schema for k-mers,
if parameter \code{with_kmer_names = TRUE}
(for more information see section \verb{Human-readable representation of k-mers})
}
\description{
This is a in-memory, probabilistic
(with configurable probability of exact results,
for more detail see section \verb{Configurable dimension of the hash value of a k-mer}),
highly-optimized, and multi-threaded implementation of the k-mer counting algorithm.

The function supports
\enumerate{
\item several types of k-mers (for more information see section \verb{Supported variants of k-mers})
\item all biological sequences (e.g., nucleic acids and proteins)
\item two common in-memory representations of sequences, i.e., string vectors and list of string vectors
(for more information see section \verb{Supported input sequences})
}

Moreover, several extra features are provided
(for more information see corresponding \code{details}' subsections):
\enumerate{
\item configurable k-mer alphabet
(i.e., which elements of a sequence should be considered during the k-mer counting procedure)
\item verbose mode
\item configurable batch size (i.e., how many sequences are processed in a single step)
\item configurable dimension of the hash value of a k-mer
\item possibility to compute k-mers with or without their frequencies
\item possibility to compute a result k-mer matrix with or without human-readable k-mer (column) names
}
}
\section{Supported variants of k-mers}{
A user explicitly specifies k-mer configuration using the following function parameters:
\code{k}, \code{kmer_gaps}, and \code{positional}.
There are four major variants of k-mers (for more information see the following subsections):
contiguous k-mers, gapped k-mers, positional contiguous k-mers, positional gapped k-mers.
\subsection{contiguous k-mers}{

Contiguous k-mers can be defined as subwords of a fixed length.

A user specifies the length of the k-mer with \code{k} parameter.
The other function parameters should be \code{kmer_gaps = NULL} (default)
and \code{positional = FALSE} (default).

For example, 3-mers of sequence AABC are:
AAB and ABC.
}

\subsection{gapped k-mers}{

Gapped k-mers can be defined as subsequences (not necessarily contiguous) of a given sequence.
In particular, between two contiguous elements of the sequence there might be a gap
of a length specified by a user separately.

A user specifies the length of each gap using \code{kmer_gaps} parameter.
The other function parameters should be \code{k = length(kmer_gaps)} (default)
and \code{positional = FALSE} (default).

For example, gapped 3-mers with gaps' lengths 0 and 1 of sequence AABCCA are:
AAC, ABC, BCA.
}

\subsection{positional contiguous k-mers}{

A positional contiguous k-mer is a subtype of a contiguous k-mer
with extra information about the exact (start) position of the k-mer.
It means that two same contiguous k-mers that start at different positions
of a given sequence are considered not to be equal,
as opposed to (non-positional) contiguous k-mers.

A user specifies the length of the k-mer with \code{k} parameter.
The other function parameters should be \code{kmer_gaps = NULL} (default)
and \code{positional = TRUE}.

For example, positional contiguous 3-mers of sequence AABCCA are:
1_AAB, 2_ABC, 3_BCC, 4_CCA.
}

\subsection{positional gapped k-mers}{

A positional gapped k-mer is a subtype of a gapped k-mer
with extra information about the exact (start) position of the k-mer.
It means that two same gapped k-mers that start at different positions
of a given sequence are considered not to be equal,
as opposed to (non-positional) gapped k-mers.

A user specifies the length of each gap using \code{kmer_gaps} parameter.
The other function parameters should be \code{k = length(kmer_gaps)} (default)
and \code{positional = TRUE}.

For example, positional gapped 3-mers with gaps' lengths 0 and 1 of sequence \code{AABCCA} are:
\code{1_AAC}, \code{2_ABC}, \code{3_BCA}.
}
}

\section{Supported input sequences}{
The function supports all types of sequences
(in particular, nucleic acids and polypeptides) that are represented
in one of the following types:
\enumerate{
\item string vectors (e.g, \code{c("AAA", "ACDA")})
\item list of string vectors (e.g., \code{list(c("A", "A", "A"), c("A", "C", "D", "A"))})
}

The first representation (\code{string vector}) is more efficient
and recommended as a default,
however, it does not support multi-character alphabets,
as opposed to the second representation (\code{list} of \code{string vectors}).
}

\section{Configurable k-mer alphabet}{
As a user might want to consider only k-mers that consist of elements
from a custom alphabet, they can explicitly provide the \code{vector} of elements
to be considered. Otherwise, all k-mers that can be derived from a given collection
of sequences will be computed.
}

\section{Verbose mode}{
Verbose mode allows a user to get extra information about the current state of computations,
e.g., which batch of sequences is currently processed.
}

\section{Configurable size of batch of sequences}{
The internal algorithm processes input sequences in consecutive batches of a given size.
The larger the size of a batch is, the more sequences will be used at a single step
in which sequences are processed concurrently.
Therefore, a user should be aware that in order to take full advantage of multi-threading,
they should set the batch size to the number that is greater or equal to the number
of CPU cores. However, simultaneously, this number should not be too large
in order to not consume too much memory, as during a single set, all sequences of a given
batch are encoded. Thus, they consume additional memory.

Generally, there are two common use cases when a user should explicitly set
the size of a batch size (in other cases, the default value will be appropriate):
\enumerate{
\item a user does not want to process sequences concurrently
(then, they should set \code{batch_size = 1})
\item a user needs to tweak the memory consumption accordingly to their custom needs
}
}

\section{Configurable dimension of the hash value of a k-mer}{
As the core of the internal algorithm is based on hashing techniques,
the function might return approximate counts.
In order to significantly reduce the probability of approximate results,
a user can specify the dimensionality of the vector that makes up the hash value
of a k-mer. The longer the (hash) vector is, the more probable is that
it gives exact results.
However, a user must be aware that the more dimensions the vector has,
both the memory consumption and CPU time increases.
}

\section{Possibility to compute k-mers with or without their frequencies}{
This feature is particularly used when a user wants to get information
related to presence or absence of k-mers. Then, they might set this feature
(\code{with_kmer_counts = FALSE}) and reduce the memory consumption
}

\section{Possibility to compute k-mer matrix with or without human-readable names (columns)}{
The aim of this feature is to optimize memory consumption and CPU time.
It is particularly useful when many different k-mer models are tested
and there is no need to get a human-readable features.
}

\section{Human-readable representation of k-mers}{
Each column of the result represent a single k-mer that has the following form:
\deqn{[p_]s1.s2....sk_g1.g2...gk-1}

The \code{[p_]} value is an integer that is used only in case of positional k-mers
(for more information on k-mer variants see section \verb{Supported variants of k-mers})
and it indicates the exact begin position of the k-mer in a sequence.
The \code{s1.s2....sk} part represents consecutive elements of the k-mer.
Finally, the \code{g1.g2...gk-1} part represents the consecutive lengths of gaps.
In particular, if contiguous k-mers are considered, all elements of this part is equal to 0
(e.g., 0.0.0 for 4-mers). Importantly, for 1-mers, this part is not present.
}

\examples{

# Counting 1-mers af two DNA sequences
count_kmers(c("ACAT", "ACC"))

# Counting 2-mers of two DNA sequences
count_kmers(c("ACAT", "ACC"), k=2)

# Counting positional 2-mers of two DNA sequences
count_kmers(c("ACAT", "ACC"), k=2, positional=TRUE)

# Counting positional 2-mers of two DNA sequences (second representation)
count_kmers(list(c("A", "C", "A", "T"), c("A", "C", "C")), k=2, positional=TRUE)

# Counting 3-mers of two DNA sequences, considering only A and C elements
count_kmers(c("ACAT", "ACC"), k=2, kmer_alphabet=c("A", "C"))

# Counting gapped 3-mers with lengths of gaps 1 and 2
count_kmers(c("ACATACTAT", "ACCCCCC"), kmer_gaps=c(1,2))

}
\seealso{
Function that counts many k-mer variants in the single invocation: \link[seqR]{count_multimers}

Function that merges two k-mer matrices (rbind): \link[seqR]{rbind_columnwise}
}
